plugins {
    id 'java-library'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.moddev' version '2.0.78'
}

tasks.named('wrapper', Wrapper).configure {
    distributionType = Wrapper.DistributionType.BIN
}

version = mod_version
group = mod_group_id

repositories {
    mavenLocal()
}

base {
    archivesName = mod_id
}

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

neoForge {
    version = project.neo_version

    parchment {
        mappingsVersion = project.parchment_mappings_version
        minecraftVersion = project.parchment_minecraft_version
    }

    runs {
        client {
            client()
            systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
        }
        server {
            server()
            programArgument '--nogui'
            systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
        }
        gameTestServer {
            type = "gameTestServer"
            systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
        }
        data {
            data()
            programArguments.addAll '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
        }
        configureEach {
            systemProperty 'forge.logging.markers', 'REGISTRIES'
            logLevel = org.slf4j.event.Level.DEBUG
        }
    }
    mods {
        "${mod_id}" {
            sourceSet(sourceSets.main)
        }
    }
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
    exclude '.cache/'
}

configurations {
    runtimeClasspath.extendsFrom localRuntime
}

repositories {
    maven { url = "https://api.modrinth.com/maven" }
    maven { url = "https://cursemaven.com"}
    maven { url = "https://modmaven.dev" }
    maven { url = "https://maven.blamejared.com" }
    maven { url = "https://mvn.devos.one/snapshots" }
    maven { url = "https://dl.cloudsmith.io/public/novamachina-mods/release/maven/" }
    maven { url = "https://maven.createmod.net" }
    mavenLocal()
}

dependencies {
    implementation "net.neoforged:neoforge:${neo_version}"
    jarJar(implementation("com.tterrag.registrate:Registrate:${registrate_version}"))

    implementation("com.simibubi.create:create-1.21.1:6.0.5-92:all") { transitive = false }

    compileOnly "mezz.jei:jei-${minecraft_version}-common-api:${jei_version}"
    compileOnly "mezz.jei:jei-${minecraft_version}-neoforge-api:${jei_version}"
    implementation("mezz.jei:jei-${minecraft_version}-neoforge:${jei_version}")
    implementation "maven.modrinth:fusion-connected-textures:${fusion_version}-neoforge-mc${mc_version}"

    compileOnly("top.theillusivec4.curios:curios-neoforge:${curios_version}+${minecraft_version}:api")
    runtimeOnly("top.theillusivec4.curios:curios-neoforge:${curios_version}+${minecraft_version}")

    implementation("maven.modrinth:sodium:mc${minecraft_version}-${sodium_version}-neoforge")
    implementation("maven.modrinth:jade:jBPaSUDN")

    //implementation("maven.modrinth:modern-industrialization:2.3.8")
    //implementation("maven.modrinth:industrial-foregoing:1.21-3.6.34")
    //implementation("maven.modrinth:mekanism:10.7.14.79")
    //implementation("maven.modrinth:immersiveengineering:12.4.1-193")
    //implementation("maven.modrinth:guideme:21.1.13")
    //implementation("maven.modrinth:titanium:1.21-4.0.37")
    //implementation("maven.modrinth:athena-mod:4.0.2")
    //implementation("maven.modrinth:mystical-agriculture:8.0.18")
    //implementation("maven.modrinth:mystical-agradditions:8.0.7")
    //implementation("maven.modrinth:cucumber:8.0.13")
    //implementation("maven.modrinth:extreme-reactors:1.21.1-2.4.9")
    //implementation("maven.modrinth:zerocore:1.21.1-2.4.9")
    //implementation("maven.modrinth:enderio:7.1.8-alpha")
    //implementation("maven.modrinth:createaddition:neoforge-1.21.1-1.4.2")
    //implementation("curse.maven:geophilic-711216:6662167")
    //implementation("curse.maven:actually-additions-228404:6485010")
    //implementation("curse.maven:productivebees-377897:6710632")

    //implementation("curse.maven:create-sifting-661938:6684683")
    //implementation("curse.maven:create-industry-693815:6769692")
    //implementation("curse.maven:create-metalwork-966104:6632276")
    //implementation("curse.maven:mechanicals-lib-1253573:6684686")
}

var generateModMetadata = tasks.register("generateModMetadata", ProcessResources) {
    var replaceProperties = [minecraft_version      : minecraft_version,
                             minecraft_version_range: minecraft_version_range,
                             neo_version            : neo_version,
                             neo_version_range      : neo_version_range,
                             loader_version_range   : loader_version_range,
                             mod_id                 : mod_id,
                             mod_name               : mod_name,
                             mod_license            : mod_license,
                             mod_version            : mod_version,
                             mod_authors            : mod_authors,
                             mod_description        : mod_description]
    inputs.properties replaceProperties
    expand replaceProperties
    from "src/main/templates"
    into "build/generated/sources/modMetadata"
}

sourceSets.main.resources.srcDir generateModMetadata
neoForge.ideSyncTask generateModMetadata

publishing {
    publications {
        register('mavenJava', MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/repo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}
